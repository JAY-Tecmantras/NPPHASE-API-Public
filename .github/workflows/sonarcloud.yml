name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  sonarcloud:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - run: dotnet restore

      - run: dotnet build --configuration Release

      # Create folder for coverage
      - name: Create Coverage Folder
        run: mkdir TestResults\CoverageReport

      # Run tests with Coverlet
      - name: Run Tests with Coverage
        run: |
          dotnet tool install --global coverlet.console
          set PATH=%PATH%;%USERPROFILE%\.dotnet\tools
          dotnet test --no-build --configuration Release ^
            /p:CollectCoverage=true ^
            /p:CoverletOutputFormat=cobertura ^
            /p:CoverletOutput=TestResults\CoverageReport\coverage.xml

      - run: dir /s TestResults

      # SonarCloud analysis
      - uses: SonarSource/sonarcloud-github-action@ffc3010689be73b8e5ae0c57ce35968afd7909e8
        with:
          args: >
            -Dsonar.projectKey=JAY-Tecmantras_NPPHASE-API-Public
            -Dsonar.organization=jay-tecmantras
            -Dsonar.qualitygate.wait=true
            -Dsonar.cs.opencover.reportsPaths=TestResults\CoverageReport\coverage.xml
            -Dsonar.sources=NPPHASE-API
            -Dsonar.tests=NPPHASE-API.Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
