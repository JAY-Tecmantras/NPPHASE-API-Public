name: PR Full & New Code SonarCloud Scan

on:
  pull_request:
    branches: [ "master" ]   # PR base branch
    types: [opened, synchronize, reopened]

jobs:
  sonar-pr-full-scan:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout full repo history (important for full scan)
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # full history for PR diff & full scan

      # 2️⃣ Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'  # apke project version

      # 4️⃣ Install SonarScanner for .NET
      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: SonarCloud Begin
        run: dotnet sonarscanner begin /k:"JAY-Tecmantras_NPPHASE-API-Public" /o:"jay-tecmantras" /d:sonar.token=%SONAR_TOKEN% /d:sonar.pullrequest.key=%PR_NUMBER% /d:sonar.pullrequest.branch=%PR_BRANCH% /d:sonar.pullrequest.base=%PR_BASE% /d:sonar.analysis.mode=publish /d:sonar.cs.analyzer.projectOutPaths="**"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_BRANCH: ${{ github.head_ref }}
          PR_BASE: ${{ github.base_ref }}


      # 6️⃣ Build solution
      - name: Build Solution
        run: dotnet build --no-restore

      # 7️⃣ Run Tests with Coverage (optional)
      - name: Run Tests
        run: dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory TestResults

      # 8️⃣ SonarCloud End
      - name: SonarCloud End
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
